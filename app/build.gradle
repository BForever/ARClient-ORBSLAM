apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId 'org.emnets.ar.arclient'

        // Sceneform requires minSdkVersion >= 24.
        minSdkVersion 28
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
    }
    // Sceneform libraries use language constructs from Java 8.
    // Add these compile options if targeting minSdkVersion < 26.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'

    // Use the Sceneform UX Package pre-built from Maven.
    implementation 'com.google.ar.sceneform.ux:sceneform-ux:1.15.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.zxing:core:3.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
//    implementation 'com.github.pedroSG94.rtmp-rtsp-stream-client-java:rtplibrary:1.7.9'

    // Use the Sceneform UX Package built from the source files included in the sceneformux folder.
    //api project(":sceneformux")
}

apply plugin: 'com.google.ar.sceneform.plugin'

sceneform.asset('sampledata/models/frame_lower_left.obj',
        'default',
        'sampledata/models/frame_lower_left.sfa',
        'src/main/assets/models/frame_lower_left')

sceneform.asset('sampledata/models/frame_lower_right.obj',
        'default',
        'sampledata/models/frame_lower_right.sfa',
        'src/main/assets/models/frame_lower_right')

sceneform.asset('sampledata/models/frame_upper_left.obj',
        'default',
        'sampledata/models/frame_upper_left.sfa',
        'src/main/assets/models/frame_upper_left')

sceneform.asset('sampledata/models/frame_upper_right.obj',
        'default',
        'sampledata/models/frame_upper_right.sfa',
        'src/main/assets/models/frame_upper_right')

sceneform.asset('sampledata/models/chroma_key_video.obj',
        'sampledata/models/chroma_key_video_material.mat',
        'sampledata/models/chroma_key_video.sfa',
        'src/main/res/raw/chroma_key_video')

apply plugin: 'com.google.protobuf'
sourceSets {
    main {
        java {
            srcDirs "src/main/java/org/emnets/ar/arclient"
            srcDirs "src/main/java/org/emnets/ar/arclient"
        }
    }
}

dependencies {
    implementation 'com.squareup.okhttp:okhttp:2.7.5'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'io.grpc:grpc-core:1.28.1'
    implementation 'io.grpc:grpc-stub:1.28.1'
    implementation 'io.grpc:grpc-okhttp:1.28.1'
    implementation('io.grpc:grpc-protobuf-lite:1.28.1') {
        exclude module: "protobuf-lite"
    }

}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.11.4'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.27.1'
        }
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }

            task.plugins {
                grpc {
                    // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}


